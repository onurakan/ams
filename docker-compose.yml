version: "3.9"

x-default-ams-backend-service: &default-ams-backend-service
    image: ams-backend-img
    build:
      context: ams-backend
    ports:
      - "8080:8080"
    volumes:
      - "./ams-backend/target/:/home/ams_user"
    networks:
      - ams-network
    command: java -jar /home/ams_user/ams-backend-0.0.1-SNAPSHOT.jar com.onur.akan.ams.AmsApplication


services:
  ams-frontend-service:
    profiles: ["profile-default", "profile-mysql"]
    container_name: ams-frontend_container
    build:
      context: ams-frontend
      target: 'develop-stage'
    ports:
    - '80:8080' #HOST_PORT:CONTAINER_PORT
    volumes:
    - './ams-frontend:/app'
    command: /bin/sh -c "yarn serve"

  ams-backend-h2-service:
    << : *default-ams-backend-service
    container_name: ams-backend-h2_container
    profiles: ["profile-default"]

  ams-backend-mysql-service:
    << : *default-ams-backend-service
    container_name: ams-backend-mysql_container
    profiles: ["profile-mysql"]
    environment:
      SPRING_PROFILES_ACTIVE : container
      DB_URL : jdbc:mysql://ams-mysql-db-service:3306/ams_db
      DB_USER : ams_db_user
      DB_PASSWORD : p_ams_db_user
      DB_SPRING_JPA_SHOW_SQL: 'true'

  ams-mysql-db-service:
    container_name: ams-mysql-db_container
    profiles: ["profile-mysql"]
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD : p_root
      MYSQL_USER: ams_db_user
      MYSQL_PASSWORD: p_ams_db_user
      MYSQL_DATABASE: ams_db
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./ams-mysql-db/data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - ams-network
      
networks:
  ams-network:
